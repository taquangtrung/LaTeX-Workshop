{
  "includes": {
    "amsmath": [],
    "keyval": []
  },
  "macros": {
    "delimsize": {},
    "kerndelim{}": {
      "snippet": "kerndelim{${1:width}}"
    },
    "usedelim": {},
    "DeclareMathDelimiterSet{}{}": {
      "snippet": "DeclareMathDelimiterSet{${1:command}}{${2:definition}}"
    },
    "DeclareMathDelimiterSet{}[]{}": {
      "snippet": "DeclareMathDelimiterSet{${1:command}}[${2:args}]{${3:definition}}"
    },
    "selectdeliml{}": {
      "snippet": "selectdeliml{${1:delim}}"
    },
    "selectdeliml*{}": {
      "snippet": "selectdeliml*{${1:delim}}"
    },
    "selectdelim{}": {
      "snippet": "selectdelim{${1:delim}}"
    },
    "selectdelim*{}": {
      "snippet": "selectdelim*{${1:delim}}"
    },
    "selectdelim[]{}": {
      "snippet": "selectdelim[${2:class}]{${1:delim}}"
    },
    "selectdelim[]*{}": {
      "snippet": "selectdelim[${2:class}]*{${1:delim}}"
    },
    "selectdelimr{}": {
      "snippet": "selectdelimr{${1:delim}}"
    },
    "selectdelimr*{}": {
      "snippet": "selectdelimr*{${1:delim}}"
    },
    "DeclareMathDelimiterSel{}{}{}": {
      "snippet": "DeclareMathDelimiterSel{${1:command}}{${2:left-def}}{${3:right-def}}"
    },
    "parsedelimflags{}{}": {
      "snippet": "parsedelimflags{${1:compositor}}{${2:selector}}"
    },
    "brk[]": {
      "snippet": "brk[${1:options}]",
      "keyvalindex": 0,
      "keyvalpos": 0
    },
    "eval[]": {
      "snippet": "eval[${1:options}]",
      "keyvalindex": 1,
      "keyvalpos": 0
    },
    "intv[]": {
      "snippet": "intv[${1:options}]",
      "option": "extdef=true",
      "keyvalindex": 2,
      "keyvalpos": 0
    },
    "bigp": {},
    "bigb": {},
    "Bigb": {},
    "Biggb": {},
    "Biggp": {},
    "Bigp": {},
    "biggb": {},
    "biggp": {},
    "bigi": {},
    "Bigi": {},
    "biggi": {},
    "Biggi": {}
  },
  "envs": {},
  "options": [
    "stddef",
    "extdef",
    "scriptstyle"
  ],
  "keyvals": [
    [
      "r",
      "s",
      "c",
      "a"
    ],
    [
      "v",
      "s"
    ],
    [
      "c",
      "o",
      "l",
      "r"
    ]
  ]
}