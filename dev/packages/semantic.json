{
  "includes": {},
  "macros": {
    "mathlig{}{}": {
      "snippet": "mathlig{${1:characters}}{${2:ligature commands}}"
    },
    "mathligson": {},
    "mathligsoff": {},
    "mathligprotect{}": {
      "snippet": "mathligprotect{${1:macro}}"
    },
    "inference{}{}": {
      "snippet": "inference{${1:line1 \\\\ ... \\\\ lineN}}{${2:conclusion}}"
    },
    "inference[]{}{}": {
      "snippet": "inference[${3:name}]{${1:line1 \\\\ ... \\\\ lineN}}{${2:conclusion}}"
    },
    "inference*{}{}": {
      "snippet": "inference*{${1:line1 \\\\ ... \\\\ lineN}}{${2:conclusion}}"
    },
    "inference*[]{}{}": {
      "snippet": "inference*[${3:name}]{${1:line1 \\\\ ... \\\\ lineN}}{${2:conclusion}}"
    },
    "setpremisesend{}": {
      "snippet": "setpremisesend{${1:length}}"
    },
    "setpremisesspace{}": {
      "snippet": "setpremisesspace{${1:length}}"
    },
    "setnamespace{}": {
      "snippet": "setnamespace{${1:length}}"
    },
    "predicate{}": {
      "snippet": "predicate{${1:formula}}"
    },
    "predicatebegin": {},
    "predicateend": {},
    "compiler{}": {
      "snippet": "compiler{${1:source,${2:machine},target}}"
    },
    "interpreter{}": {
      "snippet": "interpreter{${1:source,language}}"
    },
    "program{}": {
      "snippet": "program{${1:program,language}}"
    },
    "machine{}": {
      "snippet": "machine{${1:machine}}"
    },
    "reservestyle{}{}": {
      "snippet": "reservestyle{${1:macro}}{${2:formatting}}"
    },
    "reservestyle[]{}{}": {
      "snippet": "reservestyle[${3:spacing cmd}]{${1:macro}}{${2:formatting}}"
    },
    "<": {
      "detail": "<",
      "documentation": "LESS-THAN SIGN r:"
    },
    "comp{}{}": {
      "snippet": "comp{${1:command}}{${2:environment}}"
    },
    "eval{}{}": {
      "snippet": "eval{${1:command}}{${2:environment}}"
    },
    "evalsymbol": {},
    "evalsymbol[]": {
      "snippet": "evalsymbol[${1:superscript}]"
    },
    "compsymbol": {},
    "compsymbol[]": {
      "snippet": "compsymbol[${1:superscript}]"
    },
    "exe{}{}": {
      "snippet": "exe{${1:program}}{${2:data}}"
    },
    "exe{}[]{}": {
      "snippet": "exe{${1:program}}[${2:machine}]{${3:data}}"
    },
    "TestForConflict{}": {
      "snippet": "TestForConflict{${1:command list}}"
    },
    "semanticDate": {},
    "semanticVersion": {}
  },
  "envs": {},
  "options": [
    "ligature",
    "inference",
    "tdiagram",
    "reserved",
    "shorthand"
  ],
  "keyvals": []
}