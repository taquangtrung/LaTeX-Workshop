{
  "includes": {},
  "macros": {
    "IgnoreSpacesOn": {},
    "IgnoreSpacesOff": {},
    "Functional{}": {
      "snippet": "Functional{${1:options}}",
      "keyvalindex": 0,
      "keyvalpos": 0
    },
    "prgNewFunction{}{}{}": {
      "snippet": "prgNewFunction{${1:cmd}}{${2:xargs}}{${3:def}}"
    },
    "prgSetEqFunction{}": {
      "snippet": "prgSetEqFunction{${1:cmd}}"
    },
    "prgNewConditional{}{}{}": {
      "snippet": "prgNewConditional{${1:cmd}}{${2:xargs}}{${3:def}}"
    },
    "prgReturn{}": {
      "snippet": "prgReturn{${1:tokens}}"
    },
    "prgPrint{}": {
      "snippet": "prgPrint{${1:tokens}}"
    },
    "gResultTl": {},
    "prgDo{}": {
      "snippet": "prgDo{${1:code}}"
    },
    "prgRunOneArgCode{}{}": {
      "snippet": "prgRunOneArgCode{${1:arg1}}{${2:code}}"
    },
    "prgRunTwoArgCode{}{}{}": {
      "snippet": "prgRunTwoArgCode{${1:arg1}}{${2:arg2}}{${3:code}}"
    },
    "prgRunThreeArgCode{}{}{}{}": {
      "snippet": "prgRunThreeArgCode{${1:arg1}}{${2:arg2}}{${3:arg3}}{${4:code}}"
    },
    "prgRunFourArgCode{}{}{}{}{}": {
      "snippet": "prgRunFourArgCode{${1:arg1}}{${2:arg2}}{${3:arg3}}{${4:arg4}}{${5:code}}"
    },
    "evalWhole{}": {
      "snippet": "evalWhole{${1:tokens}}"
    },
    "evalNone{}": {
      "snippet": "evalNone{${1:tokens}}"
    },
    "expName{}": {
      "snippet": "expName{${1:csname}}"
    },
    "expWhole{}": {
      "snippet": "expWhole{${1:tokens}}"
    },
    "unExpand{}": {
      "snippet": "unExpand{${1:tokens}}"
    },
    "onlyName{}": {
      "snippet": "onlyName{${1:tokens}}"
    },
    "onlyValue{}": {
      "snippet": "onlyValue{${1:tokens}}"
    },
    "useOne{}": {
      "snippet": "useOne{${1:arg}}"
    },
    "gobbleOne{}": {
      "snippet": "gobbleOne{${1:arg}}"
    },
    "useGobble{}{}": {
      "snippet": "useGobble{${1:arg1}}{${2:arg2}}"
    },
    "gobbleUse{}{}": {
      "snippet": "gobbleUse{${1:arg1}}{${2:arg2}}"
    },
    "cTrueBool": {},
    "cFalseBool": {},
    "lTmpaBool": {},
    "lTmpbBool": {},
    "lTmpcBool": {},
    "lTmpiBool": {},
    "lTmpjBool": {},
    "lTmpkBool": {},
    "gTmpaBool": {},
    "gTmpbBool": {},
    "gTmpcBool": {},
    "gTmpiBool": {},
    "gTmpjBool": {},
    "gTmpkBool": {},
    "boolNew{}": {
      "snippet": "boolNew{${1:cmd}}"
    },
    "boolConst{}": {
      "snippet": "boolConst{${1:cmd}}"
    },
    "boolSet{}": {
      "snippet": "boolSet{${1:cmd}}"
    },
    "boolLog {}": {
      "snippet": "boolLog {${1:bool expr}}"
    },
    "boolShow {}": {
      "snippet": "boolShow {${1:bool expr}}"
    },
    "cSpaceTl": {},
    "cEmptyTl": {},
    "lTmpaTl": {},
    "lTmpbTl": {},
    "lTmpcTl": {},
    "lTmpiTl": {},
    "lTmpjTl": {},
    "lTmpkTl": {},
    "gTmpaTl": {},
    "gTmpbTl": {},
    "gTmpcTl": {},
    "gTmpiTl": {},
    "gTmpjTl": {},
    "gTmpkTl": {},
    "tlNew{}": {
      "snippet": "tlNew{${1:cmd}}"
    },
    "tlConst{}{}": {
      "snippet": "tlConst{${1:cmd}}{${2:def}}"
    },
    "tlToStr {}": {
      "snippet": "tlToStr {${1:tokens}}"
    },
    "tlToStr{}": {
      "snippet": "tlToStr{${1:tokens}}"
    },
    "tlLog {}": {
      "snippet": "tlLog {${1:tokens}}"
    },
    "tlLog{}": {
      "snippet": "tlLog{${1:tokens}}"
    },
    "tlShow {}": {
      "snippet": "tlShow {${1:tokens}}"
    },
    "tlShow{}": {
      "snippet": "tlShow{${1:tokens}}"
    },
    "tlSet{}{}": {
      "snippet": "tlSet{${1:cmd}}{${2:def}}"
    },
    "tlSetEq{}": {
      "snippet": "tlSetEq{${1:cmd}}"
    },
    "tlClearNew{}": {
      "snippet": "tlClearNew{${1:cmd}}"
    },
    "tlConcat{}": {
      "snippet": "tlConcat{${1:cmd}}"
    },
    "tlTrimSpaces {}": {
      "snippet": "tlTrimSpaces {${1:tokens}}"
    },
    "tlCount {}": {
      "snippet": "tlCount {${1:tokens}}"
    },
    "tlCount{}": {
      "snippet": "tlCount{${1:tokens}}"
    },
    "tlHead {}": {
      "snippet": "tlHead {${1:tokens}}"
    },
    "tlTail {}": {
      "snippet": "tlTail {${1:tokens}}"
    },
    "tlItem {} {}": {
      "snippet": "tlItem {${1:tokens}} {${2:int expr}}"
    },
    "tlRandItem {}": {
      "snippet": "tlRandItem {${1:tokens}}"
    },
    "tlMapInline {} {}": {
      "snippet": "tlMapInline {${1:tokens}} {${2:inline function}}"
    },
    "tlMapVariable{}{}{}": {
      "snippet": "tlMapVariable{${1:tokens}}{${2:cmd}}{${3:def}}"
    },
    "tlVarMapVariable{}{}{}": {
      "snippet": "tlVarMapVariable{${1:tlvar}}{${2:cmd}}{${3:def}}"
    },
    "tlIfEmpty {}": {
      "snippet": "tlIfEmpty {${1:tokens}}"
    },
    "tlIfEmptyT {} {}": {
      "snippet": "tlIfEmptyT {${1:tokens}} {${2:true code}}"
    },
    "tlIfEmptyF {} {}": {
      "snippet": "tlIfEmptyF {${1:tokens}} {${2:false code}}"
    },
    "tlIfEmptyTF {} {} {}": {
      "snippet": "tlIfEmptyTF {${1:tokens}} {${2:true code}} {${3:false code}}"
    },
    "tlIfBlank {}": {
      "snippet": "tlIfBlank {${1:tokens}}"
    },
    "tlIfBlankT {} {}": {
      "snippet": "tlIfBlankT {${1:tokens}} {${2:true code}}"
    },
    "tlIfBlankF {} {}": {
      "snippet": "tlIfBlankF {${1:tokens}} {${2:false code}}"
    },
    "tlIfBlankTF {} {} {}": {
      "snippet": "tlIfBlankTF {${1:tokens}} {${2:true code}} {${3:false code}}"
    },
    "tlIfEq {} {}": {
      "snippet": "tlIfEq {${1:tokens1}} {${2:tokens2}}"
    },
    "tlIfEqT {} {} {}": {
      "snippet": "tlIfEqT {${1:tokens1}} {${2:tokens2}} {${3:true code}}"
    },
    "tlIfEqF {} {} {}": {
      "snippet": "tlIfEqF {${1:tokens1}} {${2:tokens2}} {${3:false code}}"
    },
    "tlIfEqTF {} {} {} {}": {
      "snippet": "tlIfEqTF {${1:tokens1}} {${2:tokens2}} {${3:true code}} {${4:false code}}"
    },
    "tlIfIn {} {}": {
      "snippet": "tlIfIn {${1:tokens1}} {${2:tokens2}}"
    },
    "tlIfInT {} {} {}": {
      "snippet": "tlIfInT {${1:tokens1}} {${2:tokens2}} {${3:true code}}"
    },
    "tlIfInF {} {} {}": {
      "snippet": "tlIfInF {${1:tokens1}} {${2:tokens2}} {${3:false code}}"
    },
    "tlIfInTF {} {} {} {}": {
      "snippet": "tlIfInTF {${1:tokens1}} {${2:tokens2}} {${3:true code}} {${4:false code}}"
    },
    "tlIfSingle {}": {
      "snippet": "tlIfSingle {${1:tokens}}"
    },
    "tlIfSingleT {} {}": {
      "snippet": "tlIfSingleT {${1:tokens}} {${2:true code}}"
    },
    "tlIfSingleF {} {}": {
      "snippet": "tlIfSingleF {${1:tokens}} {${2:false code}}"
    },
    "tlIfSingleTF {} {} {}": {
      "snippet": "tlIfSingleTF {${1:tokens}} {${2:true code}} {${3:false code}}"
    },
    "cAmpersandStr": {},
    "cAtsignStr": {},
    "cBackslashStr": {},
    "cLeftBraceStr": {},
    "cRightBraceStr": {},
    "cCircumflexStr": {},
    "cColonStr": {},
    "cDollarStr": {},
    "cHashStr": {},
    "cPercentStr": {},
    "cTildeStr": {},
    "cUnderscoreStr": {},
    "cZeroStr": {},
    "lTmpaStr": {},
    "lTmpbStr": {},
    "lTmpcStr": {},
    "lTmpiStr": {},
    "lTmpjStr": {},
    "lTmpkStr": {},
    "gTmpaStr": {},
    "gTmpbStr": {},
    "gTmpcStr": {},
    "gTmpiStr": {},
    "gTmpjStr": {},
    "gTmpkStr": {},
    "strNew{}": {
      "snippet": "strNew{${1:cmd}}"
    },
    "strConst{}{}": {
      "snippet": "strConst{${1:cmd}}{${2:def}}"
    },
    "strLog {}": {
      "snippet": "strLog {${1:tokens}}"
    },
    "strLog{}": {
      "snippet": "strLog{${1:tokens}}"
    },
    "strShow {}": {
      "snippet": "strShow {${1:tokens}}"
    },
    "strShow{}": {
      "snippet": "strShow{${1:tokens}}"
    },
    "strSet{}{}": {
      "snippet": "strSet{${1:cmd}}{${2:def}}"
    },
    "strClearNew{}": {
      "snippet": "strClearNew{${1:cmd}}"
    },
    "strConcat{}": {
      "snippet": "strConcat{${1:cmd}}"
    },
    "strCount {}": {
      "snippet": "strCount {${1:tokens}}"
    },
    "strCount{}": {
      "snippet": "strCount{${1:tokens}}"
    },
    "strSize {}": {
      "snippet": "strSize {${1:tokens}}"
    },
    "strSize{}": {
      "snippet": "strSize{${1:tokens}}"
    },
    "strHead {}": {
      "snippet": "strHead {${1:tokens}}"
    },
    "strTail {}": {
      "snippet": "strTail {${1:tokens}}"
    },
    "strItem {} {}": {
      "snippet": "strItem {${1:tokens}} {${2:int expr}}"
    },
    "strMapInline {} {}": {
      "snippet": "strMapInline {${1:tokens}} {${2:inline function}}"
    },
    "strMapVariable{}{}{}": {
      "snippet": "strMapVariable{${1:tokens}}{${2:cmd}}{${3:def}}"
    },
    "strVarMapVariable{}{}{}": {
      "snippet": "strVarMapVariable{${1:strvar}}{${2:cmd}}{${3:def}}"
    },
    "strIfEq {} {}": {
      "snippet": "strIfEq {${1:tokens1}} {${2:tokens2}}"
    },
    "strIfEqT {} {} {}": {
      "snippet": "strIfEqT {${1:tokens1}} {${2:tokens2}} {${3:true code}}"
    },
    "strIfEqF {} {} {}": {
      "snippet": "strIfEqF {${1:tokens1}} {${2:tokens2}} {${3:false code}}"
    },
    "strIfEqTF {} {} {} {}": {
      "snippet": "strIfEqTF {${1:tokens1}} {${2:tokens2}} {${3:true code}} {${4:false code}}"
    },
    "strIfIn {} {}": {
      "snippet": "strIfIn {${1:tokens1}} {${2:tokens2}}"
    },
    "strIfInT {} {} {}": {
      "snippet": "strIfInT {${1:tokens1}} {${2:tokens2}} {${3:true code}}"
    },
    "strIfInF {} {} {}": {
      "snippet": "strIfInF {${1:tokens1}} {${2:tokens2}} {${3:false code}}"
    },
    "strIfInTF {} {} {} {}": {
      "snippet": "strIfInTF {${1:tokens1}} {${2:tokens2}} {${3:true code}} {${4:false code}}"
    },
    "cZeroInt": {},
    "cOneInt": {},
    "cMaxInt": {},
    "cMaxRegisterInt": {},
    "cMaxCharInt": {},
    "lTmpaInt": {},
    "lTmpbInt": {},
    "lTmpcInt": {},
    "lTmpiInt": {},
    "lTmpjInt": {},
    "lTmpkInt": {},
    "gTmpaInt": {},
    "gTmpbInt": {},
    "gTmpcInt": {},
    "gTmpiInt": {},
    "gTmpjInt": {},
    "gTmpkInt": {},
    "intEval {}": {
      "snippet": "intEval {${1:int expr}}"
    },
    "intMathAdd {} {}": {
      "snippet": "intMathAdd {${1:int expr1}} {${2:int expr2}}"
    },
    "intMathSub {} {}": {
      "snippet": "intMathSub {${1:int expr1}} {${2:int expr2}}"
    },
    "intMathMult {} {}": {
      "snippet": "intMathMult {${1:int expr1}} {${2:int expr2}}"
    },
    "intMathDiv {} {}": {
      "snippet": "intMathDiv {${1:int expr1}} {${2:int expr2}}"
    },
    "intMathDivTruncate {} {}": {
      "snippet": "intMathDivTruncate {${1:int expr1}} {${2:int expr2}}"
    },
    "intMathSign {}": {
      "snippet": "intMathSign {${1:int expr}}"
    },
    "intMathAbs {}": {
      "snippet": "intMathAbs {${1:int expr}}"
    },
    "intMathMax {} {}": {
      "snippet": "intMathMax {${1:int expr1}} {${2:int expr2}}"
    },
    "intMathMin {} {}": {
      "snippet": "intMathMin {${1:int expr1}} {${2:int expr2}}"
    },
    "intMathMod {} {}": {
      "snippet": "intMathMod {${1:int expr1}} {${2:int expr2}}"
    },
    "intMathRand {} {}": {
      "snippet": "intMathRand {${1:int expr1}} {${2:int expr2}}"
    },
    "intNew{}": {
      "snippet": "intNew{${1:cmd}}"
    },
    "intConst{}": {
      "snippet": "intConst{${1:cmd}}"
    },
    "intLog {}": {
      "snippet": "intLog {${1:int expr}}"
    },
    "intShow {}": {
      "snippet": "intShow {${1:int expr}}"
    },
    "intSet{}": {
      "snippet": "intSet{${1:cmd}}"
    },
    "intSetEq{}": {
      "snippet": "intSetEq{${1:cmd}}"
    },
    "intZeroNew{}": {
      "snippet": "intZeroNew{${1:cmd}}"
    },
    "intReplicate {} {}": {
      "snippet": "intReplicate {${1:int expr}} {${2:tokens}}"
    },
    "intStepInline {} {} {} {}": {
      "snippet": "intStepInline {${1:init value}} {${2:step}} {${3:final value}} {${4:code}}"
    },
    "intStepOneInline {} {} {}": {
      "snippet": "intStepOneInline {${1:init value}} {${2:final value}} {${3:code}}"
    },
    "intStepVariable{}{}{}{}{}": {
      "snippet": "intStepVariable{${1:init value}}{${2:step}}{${3:final value}}{${4:cmd}}{${5:code}}"
    },
    "intStepOneVariable{}{}{}{}": {
      "snippet": "intStepOneVariable{${1:init value}}{${2:final value}}{${3:cmd}}{${4:code}}"
    },
    "intIfOdd {}": {
      "snippet": "intIfOdd {${1:int expr}}"
    },
    "intIfOddT {} {}": {
      "snippet": "intIfOddT {${1:int expr}} {${2:true code}}"
    },
    "intIfOddF {} {}": {
      "snippet": "intIfOddF {${1:int expr}} {${2:false code}}"
    },
    "intIfOddTF {} {} {}": {
      "snippet": "intIfOddTF {${1:int expr}} {${2:true code}} {${3:false code}}"
    },
    "intIfEven {}": {
      "snippet": "intIfEven {${1:int expr}}"
    },
    "intIfEvenT {} {}": {
      "snippet": "intIfEvenT {${1:int expr}} {${2:true code}}"
    },
    "intIfEvenF {} {}": {
      "snippet": "intIfEvenF {${1:int expr}} {${2:false code}}"
    },
    "intIfEvenTF {} {} {}": {
      "snippet": "intIfEvenTF {${1:int expr}} {${2:true code}} {${3:false code}}"
    },
    "cZeroFp": {},
    "cMinusZeroFp": {},
    "cOneFp": {},
    "cInfFp": {},
    "cMinusInfFp": {},
    "cEFp": {},
    "cPiFp": {},
    "cOneDegreeFp": {},
    "lTmpaFp": {},
    "lTmpbFp": {},
    "lTmpcFp": {},
    "lTmpiFp": {},
    "lTmpjFp": {},
    "lTmpkFp": {},
    "gTmpaFp": {},
    "gTmpbFp": {},
    "gTmpcFp": {},
    "gTmpiFp": {},
    "gTmpjFp": {},
    "gTmpkFp": {},
    "fpEval {}": {
      "snippet": "fpEval {${1:fp expr}}"
    },
    "fpMathAdd {} {}": {
      "snippet": "fpMathAdd {${1:fp expr1}} {${2:fp expr2}}"
    },
    "fpMathSub {} {}": {
      "snippet": "fpMathSub {${1:fp expr1}} {${2:fp expr2}}"
    },
    "fpMathMult {} {}": {
      "snippet": "fpMathMult {${1:fp expr1}} {${2:fp expr2}}"
    },
    "fpMathDiv {} {}": {
      "snippet": "fpMathDiv {${1:fp expr1}} {${2:fp expr2}}"
    },
    "fpMathSign {}": {
      "snippet": "fpMathSign {${1:fp expr}}"
    },
    "fpMathAbs {}": {
      "snippet": "fpMathAbs {${1:fp expr}}"
    },
    "fpMathMax {} {}": {
      "snippet": "fpMathMax {${1:fp expr1}} {${2:fp expr2}}"
    },
    "fpMathMin {} {}": {
      "snippet": "fpMathMin {${1:fp expr1}} {${2:fp expr2}}"
    },
    "fpNew{}": {
      "snippet": "fpNew{${1:cmd}}"
    },
    "fpConst{}": {
      "snippet": "fpConst{${1:cmd}}"
    },
    "fpLog {}": {
      "snippet": "fpLog {${1:fp expr}}"
    },
    "fpShow {}": {
      "snippet": "fpShow {${1:fp expr}}"
    },
    "fpSet{}": {
      "snippet": "fpSet{${1:cmd}}"
    },
    "fpSetEq{}": {
      "snippet": "fpSetEq{${1:cmd}}"
    },
    "fpZeroNew{}": {
      "snippet": "fpZeroNew{${1:cmd}}"
    },
    "fpStepInline {} {} {} {}": {
      "snippet": "fpStepInline {${1:init value}} {${2:step}} {${3:final value}} {${4:code}}"
    },
    "fpStepVariable{}{}{}{}{}": {
      "snippet": "fpStepVariable{${1:init value}}{${2:step}}{${3:final value}}{${4:cmd}}{${5:code}}"
    },
    "cMaxDim": {},
    "cZeroDim": {},
    "lTmpaDim": {},
    "lTmpbDim": {},
    "lTmpcDim": {},
    "lTmpiDim": {},
    "lTmpjDim": {},
    "lTmpkDim": {},
    "gTmpaDim": {},
    "gTmpbDim": {},
    "gTmpcDim": {},
    "gTmpiDim": {},
    "gTmpjDim": {},
    "gTmpkDim": {},
    "dimEval {}": {
      "snippet": "dimEval {${1:dim expr}}"
    },
    "dimMathAdd {} {}": {
      "snippet": "dimMathAdd {${1:dim expr1}} {${2:dim expr2}}"
    },
    "dimMathSub {} {}": {
      "snippet": "dimMathSub {${1:dim expr1}} {${2:dim expr2}}"
    },
    "dimMathRatio {} {}": {
      "snippet": "dimMathRatio {${1:dim expr1}} {${2:dim expr2}}"
    },
    "dimMathSign {}": {
      "snippet": "dimMathSign {${1:dim expr}}"
    },
    "dimMathAbs {}": {
      "snippet": "dimMathAbs {${1:dim expr}}"
    },
    "dimMathMax {} {}": {
      "snippet": "dimMathMax {${1:dim expr1}} {${2:dim expr2}}"
    },
    "dimMathMin {} {}": {
      "snippet": "dimMathMin {${1:dim expr1}} {${2:dim expr2}}"
    },
    "dimNew{}": {
      "snippet": "dimNew{${1:cmd}}"
    },
    "dimConst{}": {
      "snippet": "dimConst{${1:cmd}}"
    },
    "dimLog {}": {
      "snippet": "dimLog {${1:dim expr}}"
    },
    "dimShow {}": {
      "snippet": "dimShow {${1:dim expr}}"
    },
    "dimSet{}": {
      "snippet": "dimSet{${1:cmd}}"
    },
    "dimSetEq{}": {
      "snippet": "dimSetEq{${1:cmd}}"
    },
    "dimZeroNew{}": {
      "snippet": "dimZeroNew{${1:cmd}}"
    },
    "dimStepInline {} {} {} {}": {
      "snippet": "dimStepInline {${1:init value}} {${2:step}} {${3:final value}} {${4:code}}"
    },
    "dimStepVariable{}{}{}{}{}": {
      "snippet": "dimStepVariable{${1:init value}}{${2:step}}{${3:final value}}{${4:cmd}}{${5:code}}"
    },
    "cEmptyClist": {},
    "lTmpaClist": {},
    "lTmpbClist": {},
    "lTmpcClist": {},
    "lTmpiClist": {},
    "lTmpjClist": {},
    "lTmpkClist": {},
    "gTmpaClist": {},
    "gTmpbClist": {},
    "gTmpcClist": {},
    "gTmpiClist": {},
    "gTmpjClist": {},
    "gTmpkClist": {},
    "clistNew{}": {
      "snippet": "clistNew{${1:cmd}}"
    },
    "clistConst{}": {
      "snippet": "clistConst{${1:cmd}}"
    },
    "clistJoin {} {}": {
      "snippet": "clistJoin {${1:comma list}} {${2:separator}}"
    },
    "clistJoinExtended {} {} {} {}": {
      "snippet": "clistJoinExtended {${1:comma list}} {${2:sep for 2}} {${3:sep for >2}} {${4:sep for final 2}}"
    },
    "clistLog {}": {
      "snippet": "clistLog {${1:comma list}}"
    },
    "clistShow {}": {
      "snippet": "clistShow {${1:comma list}}"
    },
    "clistSet{}": {
      "snippet": "clistSet{${1:cmd}}"
    },
    "clistSetEq{}": {
      "snippet": "clistSetEq{${1:cmd}}"
    },
    "clistSetFromSeq{}{}": {
      "snippet": "clistSetFromSeq{${1:cmd}}{${2:arg}}"
    },
    "clistClearNew{}": {
      "snippet": "clistClearNew{${1:cmd}}"
    },
    "clistCount {}": {
      "snippet": "clistCount {${1:comma list}}"
    },
    "clistItem {} {}": {
      "snippet": "clistItem {${1:comma list}} {${2:int expr}}"
    },
    "clistRandItem {}": {
      "snippet": "clistRandItem {${1:comma list}}"
    },
    "clistGet{}{}": {
      "snippet": "clistGet{${1:clistvar}}{${2:cmd}}"
    },
    "clistGetT{}{}": {
      "snippet": "clistGetT{${1:clistvar}}{${2:cmd}}"
    },
    "clistGetF{}{}": {
      "snippet": "clistGetF{${1:clistvar}}{${2:cmd}}"
    },
    "clistGetTF{}{}": {
      "snippet": "clistGetTF{${1:clistvar}}{${2:cmd}}"
    },
    "clistPop{}{}": {
      "snippet": "clistPop{${1:clistvar}}{${2:cmd}}"
    },
    "clistPopT{}{}": {
      "snippet": "clistPopT{${1:clistvar}}{${2:cmd}}"
    },
    "clistPopF{}{}": {
      "snippet": "clistPopF{${1:clistvar}}{${2:cmd}}"
    },
    "clistPopTF{}{}": {
      "snippet": "clistPopTF{${1:clistvar}}{${2:cmd}}"
    },
    "clistMapInline {} {}": {
      "snippet": "clistMapInline {${1:comma list}} {${2:inline function}}"
    },
    "clistMapVariable{}{}{}": {
      "snippet": "clistMapVariable{${1:comma list}}{${2:cmd}}{${3:def}}"
    },
    "clistVarMapVariable{}{}{}": {
      "snippet": "clistVarMapVariable{${1:clistvar}}{${2:cmd}}{${3:def}}"
    },
    "clistIfEmpty {}": {
      "snippet": "clistIfEmpty {${1:comma list}}"
    },
    "clistIfEmptyT {} {}": {
      "snippet": "clistIfEmptyT {${1:comma list}} {${2:true code}}"
    },
    "clistIfEmptyF {} {}": {
      "snippet": "clistIfEmptyF {${1:comma list}} {${2:false code}}"
    },
    "clistIfEmptyTF {} {} {}": {
      "snippet": "clistIfEmptyTF {${1:comma list}} {${2:true code}} {${3:false code}}"
    },
    "clistIfIn {} {}": {
      "snippet": "clistIfIn {${1:comma list}} {${2:item}}"
    },
    "clistIfInT {} {} {}": {
      "snippet": "clistIfInT {${1:comma list}} {${2:item}} {${3:true code}}"
    },
    "clistIfInF {} {} {}": {
      "snippet": "clistIfInF {${1:comma list}} {${2:item}} {${3:false code}}"
    },
    "clistIfInTF {} {} {} {}": {
      "snippet": "clistIfInTF {${1:comma list}} {${2:item}} {${3:true code}} {${4:false code}}"
    },
    "cEmptySeq": {},
    "lTmpaSeq": {},
    "lTmpbSeq": {},
    "lTmpcSeq": {},
    "lTmpiSeq": {},
    "lTmpjSeq": {},
    "lTmpkSeq": {},
    "gTmpaSeq": {},
    "gTmpbSeq": {},
    "gTmpcSeq": {},
    "gTmpiSeq": {},
    "gTmpjSeq": {},
    "gTmpkSeq": {},
    "seqNew{}": {
      "snippet": "seqNew{${1:cmd}}"
    },
    "seqConstFromClist{}": {
      "snippet": "seqConstFromClist{${1:cmd}}"
    },
    "seqSetFromClist{}": {
      "snippet": "seqSetFromClist{${1:cmd}}"
    },
    "seqSetSplit{}": {
      "snippet": "seqSetSplit{${1:cmd}}"
    },
    "seqSetEq{}": {
      "snippet": "seqSetEq{${1:cmd}}"
    },
    "seqClearNew{}": {
      "snippet": "seqClearNew{${1:cmd}}"
    },
    "seqVarMapVariable{}{}{}": {
      "snippet": "seqVarMapVariable{${1:seqvar}}{${2:cmd}}{${3:def}}"
    },
    "cEmptyProp": {},
    "lTmpaProp": {},
    "lTmpbProp": {},
    "lTmpcProp": {},
    "lTmpiProp": {},
    "lTmpjProp": {},
    "lTmpkProp": {},
    "gTmpaProp": {},
    "gTmpbProp": {},
    "gTmpcProp": {},
    "gTmpiProp": {},
    "gTmpjProp": {},
    "gTmpkProp": {},
    "propNew{}": {
      "snippet": "propNew{${1:cmd}}"
    },
    "propConstFromKeyval{}": {
      "snippet": "propConstFromKeyval{${1:cmd}}"
    },
    "propSetFromKeyval{}": {
      "snippet": "propSetFromKeyval{${1:cmd}}"
    },
    "propSetEq{}": {
      "snippet": "propSetEq{${1:cmd}}"
    },
    "propClearNew{}": {
      "snippet": "propClearNew{${1:cmd}}"
    },
    "propGet{}{}{}": {
      "snippet": "propGet{${1:propvar}}{${2:key}}{${3:cmd}}"
    },
    "propGetT{}{}{}": {
      "snippet": "propGetT{${1:propvar}}{${2:key}}{${3:cmd}}"
    },
    "propGetF{}{}{}": {
      "snippet": "propGetF{${1:propvar}}{${2:key}}{${3:cmd}}"
    },
    "propGetTF{}{}{}": {
      "snippet": "propGetTF{${1:propvar}}{${2:key}}{${3:cmd}}"
    },
    "propPop{}{}{}": {
      "snippet": "propPop{${1:propvar}}{${2:key}}{${3:cmd}}"
    },
    "propPopT{}{}{}": {
      "snippet": "propPopT{${1:propvar}}{${2:key}}{${3:cmd}}"
    },
    "propPopF{}{}{}": {
      "snippet": "propPopF{${1:propvar}}{${2:key}}{${3:cmd}}"
    },
    "propPopTF{}{}{}": {
      "snippet": "propPopTF{${1:propvar}}{${2:key}}{${3:cmd}}"
    },
    "lTmpaRegex": {},
    "lTmpbRegex": {},
    "lTmpcRegex": {},
    "lTmpiRegex": {},
    "lTmpjRegex": {},
    "lTmpkRegex": {},
    "gTmpaRegex": {},
    "gTmpbRegex": {},
    "gTmpcRegex": {},
    "gTmpiRegex": {},
    "gTmpjRegex": {},
    "gTmpkRegex": {},
    "regex{}": {
      "snippet": "regex{${1:cmd}}"
    },
    "regexSet{}{}": {
      "snippet": "regexSet{${1:cmd}}{${2:def}}"
    },
    "regexConst{}{}": {
      "snippet": "regexConst{${1:cmd}}{${2:def}}"
    },
    "regexLog {}": {
      "snippet": "regexLog {${1:regex}}"
    },
    "regexShow {}": {
      "snippet": "regexShow {${1:regex}}"
    },
    "regexMatch {} {}": {
      "snippet": "regexMatch {${1:regex}} {${2:tokens}}"
    },
    "regexMatchT {} {} {}": {
      "snippet": "regexMatchT {${1:regex}} {${2:tokens}} {${3:true code}}"
    },
    "regexMatchF {} {} {}": {
      "snippet": "regexMatchF {${1:regex}} {${2:tokens}} {${3:false code}}"
    },
    "regexMatchTF {} {} {} {}": {
      "snippet": "regexMatchTF {${1:regex}} {${2:tokens}} {${3:true code}} {${4:false code}}"
    },
    "regexExtractOnce{}{}{}": {
      "snippet": "regexExtractOnce{${1:regex}}{${2:tokens}}{${3:cmd}}"
    },
    "regexExtractOnceT{}{}{}": {
      "snippet": "regexExtractOnceT{${1:regex}}{${2:tokens}}{${3:cmd}}"
    },
    "regexExtractOnceF{}{}{}": {
      "snippet": "regexExtractOnceF{${1:regex}}{${2:tokens}}{${3:cmd}}"
    },
    "regexExtractOnceTF{}{}{}": {
      "snippet": "regexExtractOnceTF{${1:regex}}{${2:tokens}}{${3:cmd}}"
    },
    "regexVarExtractOnce{}{}{}": {
      "snippet": "regexVarExtractOnce{${1:regexvar}}{${2:tokens}}{${3:cmd}}"
    },
    "regexVarExtractOnceT{}{}{}": {
      "snippet": "regexVarExtractOnceT{${1:regexvar}}{${2:tokens}}{${3:cmd}}"
    },
    "regexVarExtractOnceF{}{}{}": {
      "snippet": "regexVarExtractOnceF{${1:regexvar}}{${2:tokens}}{${3:cmd}}"
    },
    "regexVarExtractOnceTF{}{}{}": {
      "snippet": "regexVarExtractOnceTF{${1:regexvar}}{${2:tokens}}{${3:cmd}}"
    },
    "regexExtractAll{}{}{}": {
      "snippet": "regexExtractAll{${1:regex}}{${2:tokens}}{${3:cmd}}"
    },
    "regexExtractAllT{}{}{}": {
      "snippet": "regexExtractAllT{${1:regex}}{${2:tokens}}{${3:cmd}}"
    },
    "regexExtractAllF{}{}{}": {
      "snippet": "regexExtractAllF{${1:regex}}{${2:tokens}}{${3:cmd}}"
    },
    "regexExtractAllTF{}{}{}": {
      "snippet": "regexExtractAllTF{${1:regex}}{${2:tokens}}{${3:cmd}}"
    },
    "regexVarExtractAll{}{}{}": {
      "snippet": "regexVarExtractAll{${1:regexvar}}{${2:tokens}}{${3:cmd}}"
    },
    "regexVarExtractAllT{}{}{}": {
      "snippet": "regexVarExtractAllT{${1:regexvar}}{${2:tokens}}{${3:cmd}}"
    },
    "regexVarExtractAllF{}{}{}": {
      "snippet": "regexVarExtractAllF{${1:regexvar}}{${2:tokens}}{${3:cmd}}"
    },
    "regexVarExtractAllTF{}{}{}": {
      "snippet": "regexVarExtractAllTF{${1:regexvar}}{${2:tokens}}{${3:cmd}}"
    },
    "regexSplit{}{}{}": {
      "snippet": "regexSplit{${1:regex}}{${2:tokens}}{${3:cmd}}"
    },
    "regexSplitT{}{}{}": {
      "snippet": "regexSplitT{${1:regex}}{${2:tokens}}{${3:cmd}}"
    },
    "regexSplitF{}{}{}": {
      "snippet": "regexSplitF{${1:regex}}{${2:tokens}}{${3:cmd}}"
    },
    "regexSplitTF{}{}{}": {
      "snippet": "regexSplitTF{${1:regex}}{${2:tokens}}{${3:cmd}}"
    },
    "regexVarSplit{}{}{}": {
      "snippet": "regexVarSplit{${1:regexvar}}{${2:tokens}}{${3:cmd}}"
    },
    "regexVarSplitT{}{}{}": {
      "snippet": "regexVarSplitT{${1:regexvar}}{${2:tokens}}{${3:cmd}}"
    },
    "regexVarSplitF{}{}{}": {
      "snippet": "regexVarSplitF{${1:regexvar}}{${2:tokens}}{${3:cmd}}"
    },
    "regexVarSplitTF{}{}{}": {
      "snippet": "regexVarSplitTF{${1:regexvar}}{${2:tokens}}{${3:cmd}}"
    },
    "x{}": {
      "snippet": "x{${1:hh}}"
    },
    "a": {
      "detail": "𝑎",
      "documentation": "MATHEMATICAL ITALIC SMALL A"
    },
    "e": {
      "detail": "𝑒",
      "documentation": "MATHEMATICAL ITALIC SMALL E"
    },
    "f": {
      "detail": "𝑓",
      "documentation": "MATHEMATICAL ITALIC SMALL F"
    },
    "n": {
      "detail": "𝑛",
      "documentation": "MATHEMATICAL ITALIC SMALL N"
    },
    "r": {
      "detail": "𝑟",
      "documentation": "MATHEMATICAL ITALIC SMALL R"
    },
    "t": {
      "detail": "𝑡",
      "documentation": "MATHEMATICAL ITALIC SMALL T"
    },
    "d": {
      "detail": "𝑑",
      "documentation": "MATHEMATICAL ITALIC SMALL D"
    },
    "h": {
      "detail": "h",
      "documentation": "LATIN SMALL LETTER H"
    },
    "s": {
      "detail": "𝑠",
      "documentation": "MATHEMATICAL ITALIC SMALL S"
    },
    "v": {
      "detail": "𝑣",
      "documentation": "MATHEMATICAL ITALIC SMALL V"
    },
    "w": {
      "detail": "𝑤",
      "documentation": "MATHEMATICAL ITALIC SMALL W"
    },
    "D": {
      "detail": "𝐷",
      "documentation": "MATHEMATICAL ITALIC CAPITAL D"
    },
    "H": {
      "detail": "𝐻",
      "documentation": "MATHEMATICAL ITALIC CAPITAL H"
    },
    "N": {
      "detail": "𝑁",
      "documentation": "MATHEMATICAL ITALIC CAPITAL N"
    },
    "S": {
      "detail": "𝑆",
      "documentation": "MATHEMATICAL ITALIC CAPITAL S"
    },
    "V": {
      "detail": "𝑉",
      "documentation": "MATHEMATICAL ITALIC CAPITAL V"
    },
    "W": {
      "detail": "𝑊",
      "documentation": "MATHEMATICAL ITALIC CAPITAL W"
    },
    "K": {
      "detail": "𝐾",
      "documentation": "MATHEMATICAL ITALIC CAPITAL K"
    },
    "c{}": {
      "snippet": "c{${1:regex}}"
    },
    "cC": {},
    "cB": {},
    "cE": {},
    "cM": {},
    "cT": {},
    "cP": {},
    "cU": {},
    "cD": {},
    "cS": {},
    "cL": {},
    "cO": {},
    "cA": {},
    "u{}": {
      "snippet": "u{${1:var name}}"
    },
    "ur{}": {
      "snippet": "ur{${1:var name}}"
    },
    "b": {
      "detail": "𝑏",
      "documentation": "MATHEMATICAL ITALIC SMALL B"
    },
    "B": {
      "detail": "𝐵",
      "documentation": "MATHEMATICAL ITALIC CAPITAL B"
    },
    "A": {
      "detail": "𝐴",
      "documentation": "MATHEMATICAL ITALIC CAPITAL A"
    },
    "Z": {
      "detail": "𝑍",
      "documentation": "MATHEMATICAL ITALIC CAPITAL Z"
    },
    "z": {
      "detail": "𝑧",
      "documentation": "MATHEMATICAL ITALIC SMALL Z"
    },
    "G": {
      "detail": "𝐺",
      "documentation": "MATHEMATICAL ITALIC CAPITAL G"
    },
    "charSetLccode {} {}": {
      "snippet": "charSetLccode {${1:int expr1}} {${2:int expr2}}"
    },
    "charSetUccode {} {}": {
      "snippet": "charSetUccode {${1:int expr1}} {${2:int expr2}}"
    },
    "charValueLccode {}": {
      "snippet": "charValueLccode {${1:int expr}}"
    },
    "charValueUccode {}": {
      "snippet": "charValueUccode {${1:int expr}}"
    },
    "textExpand {}": {
      "snippet": "textExpand {${1:text}}"
    },
    "textLowercase {}": {
      "snippet": "textLowercase {${1:text}}"
    },
    "textUppercase {}": {
      "snippet": "textUppercase {${1:text}}"
    },
    "textTitlecase {}": {
      "snippet": "textTitlecase {${1:text}}"
    },
    "textTitlecaseFirst {}": {
      "snippet": "textTitlecaseFirst {${1:text}}"
    },
    "textLangLowercase {} {}": {
      "snippet": "textLangLowercase {${1:language}} {${2:text}}"
    },
    "textLangUppercase {} {}": {
      "snippet": "textLangUppercase {${1:language}} {${2:text}}"
    },
    "textLangTitlecase {} {}": {
      "snippet": "textLangTitlecase {${1:language}} {${2:text}}"
    },
    "textLangTitlecaseFirst {} {}": {
      "snippet": "textLangTitlecaseFirst {${1:language}} {${2:text}}"
    },
    "fileInput {}": {
      "snippet": "fileInput {${1:file name}}"
    },
    "fileInput{}": {
      "snippet": "fileInput{${1:file}}"
    },
    "fileIfExistInput {}": {
      "snippet": "fileIfExistInput {${1:file name}}"
    },
    "fileIfExistInput{}": {
      "snippet": "fileIfExistInput{${1:file}}"
    },
    "fileIfExistInputF {} {}": {
      "snippet": "fileIfExistInputF {${1:file name}} {${2:false code}}"
    },
    "fileIfExistInputF{}{}": {
      "snippet": "fileIfExistInputF{${1:file}}{${2:false code}}"
    },
    "fileGet{}{}{}": {
      "snippet": "fileGet{${1:file name}}{${2:setup}}{${3:cmd}}"
    },
    "fileGetT{}{}{}{}": {
      "snippet": "fileGetT{${1:file name}}{${2:setup}}{${3:cmd}}{${4:true code}}"
    },
    "fileGetF{}{}{}{}": {
      "snippet": "fileGetF{${1:file name}}{${2:setup}}{${3:cmd}}{${4:false code}}"
    },
    "fileGetTF{}{}{}{}{}": {
      "snippet": "fileGetTF{${1:file name}}{${2:setup}}{${3:cmd}}{${4:true code}}{${5:false code}}"
    },
    "fileIfExist {}": {
      "snippet": "fileIfExist {${1:file name}}"
    },
    "fileIfExistT {} {}": {
      "snippet": "fileIfExistT {${1:file name}} {${2:true code}}"
    },
    "fileIfExistF {} {}": {
      "snippet": "fileIfExistF {${1:file name}} {${2:false code}}"
    },
    "fileIfExistTF {} {} {}": {
      "snippet": "fileIfExistTF {${1:file name}} {${2:true code}} {${3:false code}}"
    },
    "qNoValue": {},
    "legacyIf {}": {
      "snippet": "legacyIf {${1:name}}"
    },
    "legacyIfT {} {}": {
      "snippet": "legacyIfT {${1:name}} {${2:true code}}"
    },
    "legacyIfF {} {}": {
      "snippet": "legacyIfF {${1:name}} {${2:false code}}"
    },
    "legacyIfTF {} {} {}": {
      "snippet": "legacyIfTF {${1:name}} {${2:true code}} {${3:false code}}"
    },
    "legacyIfSetTrue {}": {
      "snippet": "legacyIfSetTrue {${1:name}}"
    },
    "legacyIfSetFalse {}": {
      "snippet": "legacyIfSetFalse {${1:name}}"
    },
    "legacyIfSet {} {}": {
      "snippet": "legacyIfSet {${1:name}} {${2:bool expr}}"
    },
    "clistMapBreak": {},
    "clistVarSort{}{}": {
      "snippet": "clistVarSort{${1:arg1}}{${2:arg2}}"
    },
    "cNoValueTl": {},
    "expOnce{}": {
      "snippet": "expOnce{${1:arg}}"
    },
    "expPartial{}": {
      "snippet": "expPartial{${1:arg}}"
    },
    "fileInputStop": {},
    "prgLocal": {},
    "noExpand{}": {
      "snippet": "noExpand{${1:tokens}}"
    },
    "onlyOnce{}": {
      "snippet": "onlyOnce{${1:tokens}}"
    },
    "onlyPartial{}": {
      "snippet": "onlyPartial{${1:tokens}}"
    },
    "prgBreak": {},
    "prgBreakDo": {},
    "propMapBreak": {},
    "seqJoin{}{}": {
      "snippet": "seqJoin{${1:arg1}}{${2:arg2}}"
    },
    "seqJoinExtended{}{}{}{}": {
      "snippet": "seqJoinExtended{${1:arg1}}{${2:arg2}}{${3:arg3}}{${4:arg4}}"
    },
    "seqMapBreak": {},
    "seqVarSort{}{}": {
      "snippet": "seqVarSort{${1:arg1}}{${2:arg2}}"
    },
    "sortReturnSame": {},
    "sortReturnSwapped": {},
    "Result{}": {
      "snippet": "Result{${1:tokens}}"
    },
    "PrgNewFunction{}{}{}": {
      "snippet": "PrgNewFunction{${1:cmd}}{${2:xargs}}{${3:def}}"
    },
    "PrgNewConditional{}{}{}": {
      "snippet": "PrgNewConditional{${1:cmd}}{${2:xargs}}{${3:def}}"
    }
  },
  "envs": {},
  "options": [],
  "keyvals": [
    [
      "scoping",
      "tracing"
    ]
  ]
}